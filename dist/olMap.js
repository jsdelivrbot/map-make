// layerswitcher to different projections uses following functions not currently exported:
function addLayersDiv(e,t,r){var n=document.createElement("div");n.innerHTML=r,t.appendChild(n),t.appendChild(e)}function createView(e,t,r,n){var o=r?ol.extent.getCenter(r):[0,0],a=e.center?ol.proj.transform([e.center.lon,e.center.lat],"EPSG:4326",t):o,i={center:a,zoom:e.zoom||0};return t&&(i.projection=t),n&&(i.resolutions=n),e.rotation&&(i.rotation=e.rotation),new ol.View2D(i)}function createMapTarget(e){var t=document.createElement("div");return t.id="map",t.style.height="400px",e||(t.tabIndex=0),document.body.appendChild(t),t}var ol=require("ol");require("./css/ol.css!");var map,views={},layersDiv=document.createElement("div");layersDiv.id="layerswitch",module.exports={createMap:function(e,t){map=new ol.Map({renderer:ol.RendererHint.CANVAS,target:e||createMapTarget(t)})},createRasters:function(e,t){var r,n=document.createElement("div");n.id="rasters";for(var o=function(e){for(var t=document.getElementById(e.target.htmlFor)||e.target,r=map.getLayers().getArray().filter(function(e){return e.activeLayer===!0}),n=map.getLayers().getArray().filter(function(e){return e.get("id")==t.value}),o=0;o<r.length;o++)r[o].setVisible(!1),r[o].activeLayer=!1;for(o=0;o<n.length;o++)n[o].setVisible(!0),n[o].activeLayer=!0;var a=n[0].getSource().getProjection().getCode(),i=r[0].getSource().getProjection().getCode();if(a!=i){var l=map.getView().calculateExtent(map.getSize()),c=ol.proj.getTransform(i,a),s=ol.extent.transform(l,c),d=map.getLayers().getArray().filter(function(e){return e instanceof ol.layer.Vector});for(o=0;o<d.length;o++){var u=d[o].getFeatures();for(var p in u)u[p].getGeometry().transform(c)}map.setView(views[a]),map.getView().fitExtent(s,map.getSize())}},a=0;a<t.rasters.length;a++){var i,l,c;if("object"==typeof t.rasters[a])for(c in t.rasters[a])i=c,l=t.rasters[a][c];else i=t.rasters[a];var s=e[i],d=s.projCode||"EPSG:3857";views[d]||(0===a&&(r=d),views[d]=createView(t,d,s.extent,s.resolutions));for(var u,p=s.getLayers({zoom:t.zoom,apikey:l}),m=0;m<p.length;m++)u=p[m],u.setVisible(!1),0===a?(u.activeLayer=!0,t.vectors||u.setVisible(!0)):u.activeLayer=!1,map.addLayer(u);var v=document.createElement("input");v.name="rasters",v.value=v.id=u.get("id"),v.type="radio",0===a&&(v.checked=!0);var y=document.createElement("label");y.htmlFor=y.innerHTML=v.value,y.style.verticalAlign="bottom";var g=document.createElement("div");g.appendChild(v),g.appendChild(y),g.onclick=o,n.appendChild(g),s.viewEvent&&views[d].on(s.viewEvent.type,s.viewEvent.func)}map.setView(views[r]),addLayersDiv(n,layersDiv,"Rasters")},create4326View:function(e){var t="EPSG:4326";views[t]=createView(e,t)},setDefaultView:function(e){map.setView(views[e])},createVectors:function(e){var t=document.createElement("div");t.id="vectors";for(var r=function(e){var t=document.getElementById(e.target.htmlFor)||e.target,r=map.getLayers().getArray().filter(function(e){return e.get("id")==t.value})[0];r.setVisible(t.checked)},n=0,o=e;n<o.length;n++){var a,i=o[n].url;if(!o[n].parser){var l={geojson:"GeoJSON",gpx:"GPX",kml:"KML"},c=i.substring(i.lastIndexOf(".")+1);a=l[c]}a=o[n].parser||a;var s={source:new ol.source.Vector({url:i,attributions:[new ol.Attribution({html:o[n].attribution})],parser:new ol.parser[a]}),id:o[n].id};if(o[n].styles&&o[n].styles[0].stroke){var d=o[n].styles[0].stroke;s.style=new ol.style.Style({symbolizers:[new ol.style.Stroke({color:d.color,width:d.width,opacity:d.opacity})]})}map.addLayer(new ol.layer.Vector(s));var u=document.createElement("input");u.name=u.id=u.value=o[n].id,u.type="checkbox",u.checked=!0;var p=document.createElement("label");p.htmlFor=p.innerHTML=u.value,p.style.verticalAlign="baseline";var m=document.createElement("div");m.appendChild(u),m.appendChild(p),m.onclick=r,t.appendChild(m)}addLayersDiv(t,layersDiv,"Vectors")},createView:createView,addFeaturesListener:function(){for(var e=map.getLayers().getArray().filter(function(e){return e instanceof ol.layer.Vector}),t=ol.extent.createEmpty(),r=0,n=function(n){if(ol.extent.extend(t,n.extents?n.extents[0]:n.a[0]),r++,r==e.length){map.getView().fitExtent(t,map.getSize());var o=map.getLayers().getArray().filter(function(e){return e.activeLayer===!0})[0];o&&o.setVisible(!0);var a=document.getElementById("status");a&&(a.style.display="none")}},o=0;o<e.length;o++)e[o].on("featureadd",n)},addWidgets:function(e){var t={scaleline:function(){map.addControl(new ol.control.ScaleLine)},latlonmouse:function(){map.addControl(new ol.control.MousePosition({coordinateFormat:function(e){return ol.coordinate.toStringHDMS(e)+" ("+ol.coordinate.format(e,"{y}, {x}",4)+")"},projection:"EPSG:4326"}))},projectedmouse:function(){var e=document.createElement("style");e.appendChild(document.createTextNode(".projmouse {top: 28px}")),document.head.appendChild(e),map.addControl(new ol.control.MousePosition({coordinateFormat:function(e){return"projected: "+ol.coordinate.toStringXY(e,0)},className:"ol-mouse-position projmouse"}))},popup:function(){var e=document.createElement("div");e.id="popup",e.style.backgroundColor="white",document.body.appendChild(e);var t=new ol.Overlay({element:document.getElementById("popup"),positioning:ol.OverlayPositioning.BOTTOM_CENTER,stopEvent:!0});map.on(["click"],function(e){map.getFeatures({pixel:e.getPixel(),layers:map.getLayers().getArray().filter(function(e){return e instanceof ol.layer.Vector}),success:function(r){for(var n=[],o=0;o<r.length;o++)n=n.concat(r[o]);var a="";for(o=0;o<n.length;o++){0!==o&&(a+="<br>"),a+="Id: "+n[o].getId();var i=n[o].getAttributes(!0);for(var l in i)a+="<br>"+l+": "+i[l]}var c=t.getElement();c.innerHTML=a,c.style.display="block",t.setPosition(e.getCoordinate())}})}),map.addOverlay(t)},tooltip:function(){var e=document.createElement("div");e.id="tooltip",e.style.position="absolute",e.style.zIndex="20000",e.style.backgroundColor="white",document.body.appendChild(e),map.on(["mousemove"],function(e){map.getFeatures({pixel:e.getPixel(),layers:map.getLayers().getArray().filter(function(e){return e instanceof ol.layer.Vector}),success:function(t){for(var r=[],n=0;n<t.length;n++)r=r.concat(t[n]);var o=r[0],a=document.getElementById("tooltip"),i=document.getElementsByTagName("canvas")[0];o?(a.innerHTML=o.get("title")||"",a.style.left=e.getPixel()[0]+10+"px",a.style.top=e.getPixel()[1]+10+"px",a.style.display="block",i.style.cursor="pointer"):(a.style.display="none",i.style.cursor="default")}})})}};for(var r in e)t[r]&&t[r]()},make1stLayerVisible:function(){map.getLayers().getArray().filter(function(e){return e.activeLayer===!0}).forEach(function(e){e.setVisible(!0)})},setFocus:function(){map.getTarget().focus()},getLayersDiv:function(){return layersDiv},get:function(){return map}};
//# sourceMappingURL=dist/olMap.js.map